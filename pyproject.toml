[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "zeroproof"
version = "0.1.0"
description = "Transreal arithmetic for stable machine learning without epsilon hacks"
authors = [
    {name = "ZeroProof Team", email = "zeroproof@example.com"}
]
maintainers = [
    {name = "ZeroProof Team", email = "zeroproof@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
]
keywords = ["transreal", "arithmetic", "machine-learning", "autodiff", "singularities", "numerical-stability"]

dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "hypothesis>=6.50.0",
    "black>=22.0.0",
    "ruff>=0.0.280",
    "mypy>=1.0.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "ipython>=8.0.0",
    "jupyter>=1.0.0",
    "matplotlib>=3.5.0",
]

torch = [
    "torch>=1.10.0",
]

jax = [
    "jax>=0.3.0",
    "jaxlib>=0.3.0",
]

numba = [
    "numba>=0.55.0",
]

all = [
    "zeroproof[dev,torch,jax,numba]",
]

[project.urls]
Homepage = "https://github.com/zeroproof/zeroproof"
Documentation = "https://zeroproof.readthedocs.io"
Repository = "https://github.com/zeroproof/zeroproof"
Issues = "https://github.com/zeroproof/zeroproof/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["zeroproof*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
addopts = [
    "--strict-markers",
    "--tb=short",
    "-ra",
]
markers = [
    "property: property-based tests using Hypothesis",
    "e2e: end-to-end integration tests",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "benchmark: marks benchmarking tests",
]

[tool.coverage.run]
source = ["zeroproof"]
branch = true
omit = [
    "*/tests/*",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]
precision = 2
show_missing = true

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py38"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py files
"tests/*" = ["B011"]      # assert False is fine in tests

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "numpy.*",
    "scipy.*",
    "torch.*",
    "jax.*",
    "hypothesis.*",
]
ignore_missing_imports = true
